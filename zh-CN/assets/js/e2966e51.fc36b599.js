"use strict";(self.webpackChunklinkis_web_apache=self.webpackChunklinkis_web_apache||[]).push([[32363],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var a=i.createContext({}),u=function(e){var t=i.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=u(e.components);return i.createElement(a.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,a=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,b=d["".concat(a,".").concat(m)]||d[m]||p[m]||o;return n?i.createElement(b,s(s({ref:t},c),{},{components:n})):i.createElement(b,s({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=d;var l={};for(var a in t)hasOwnProperty.call(t,a)&&(l[a]=t[a]);l.originalType=e,l.mdxType="string"==typeof e?e:r,s[1]=l;for(var u=2;u<o;u++)s[u]=n[u];return i.createElement.apply(null,s)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},31802:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return a},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var i=n(87462),r=n(63366),o=(n(67294),n(3905)),s=["components"],l={title:"0.X SDK\u7684\u4f7f\u7528",sidebar_position:0},a=void 0,u={unversionedId:"user-guide/X-sdk-manual",id:"version-0.11.0/user-guide/X-sdk-manual",isDocsHomePage:!1,title:"0.X SDK\u7684\u4f7f\u7528",description:"Linkis \u63d0\u4f9b\u4e86\u65b9\u4fbf\u7684JAVA\u548cSCALA\u8c03\u7528\u7684\u63a5\u53e3\uff0c\u53ea\u9700\u8981\u5f15\u5165ujes-client\u7684\u6a21\u5757\u5c31\u53ef\u4ee5\u8fdb\u884c\u4f7f\u7528",source:"@site/i18n/zh-CN/docusaurus-plugin-content-docs/version-0.11.0/user-guide/0.X-sdk-manual.md",sourceDirName:"user-guide",slug:"/user-guide/X-sdk-manual",permalink:"/zh-CN/docs/0.11.0/user-guide/X-sdk-manual",editUrl:"https://github.com/apache/incubator-linkis-website/edit/dev/i18n/zh-CN/docusaurus-plugin-content-docs/version-0.11.0/user-guide/0.X-sdk-manual.md",tags:[],version:"0.11.0",sidebarPosition:0,frontMatter:{title:"0.X SDK\u7684\u4f7f\u7528",sidebar_position:0},sidebar:"version-1.0.2/tutorialSidebar",previous:{title:"\u6e90\u7801\u76ee\u5f55\u7ed3\u6784",permalink:"/zh-CN/docs/0.11.0/deployment/sourcecode-hierarchical-structure"},next:{title:"1.0 SDK\u7684\u4f7f\u7528",permalink:"/zh-CN/docs/0.11.0/user-guide/1.0-sdk-manual"}},c=[{value:"1 \u5f15\u5165\u4f9d\u8d56\u6a21\u5757",id:"1-\u5f15\u5165\u4f9d\u8d56\u6a21\u5757",children:[]},{value:"2 Java\u6d4b\u8bd5\u4ee3\u7801",id:"2-java\u6d4b\u8bd5\u4ee3\u7801",children:[]},{value:"3 Scala\u6d4b\u8bd5\u4ee3\u7801",id:"3-scala\u6d4b\u8bd5\u4ee3\u7801",children:[]}],p={toc:c};function d(e){var t=e.components,n=(0,r.Z)(e,s);return(0,o.kt)("wrapper",(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Linkis \u63d0\u4f9b\u4e86\u65b9\u4fbf\u7684JAVA\u548cSCALA\u8c03\u7528\u7684\u63a5\u53e3\uff0c\u53ea\u9700\u8981\u5f15\u5165ujes-client\u7684\u6a21\u5757\u5c31\u53ef\u4ee5\u8fdb\u884c\u4f7f\u7528")),(0,o.kt)("h2",{id:"1-\u5f15\u5165\u4f9d\u8d56\u6a21\u5757"},"1 \u5f15\u5165\u4f9d\u8d56\u6a21\u5757"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"<dependency>\n  <groupId>com.webank.wedatasphere.linkis</groupId>\n  <artifactId>linkis-ujes-client</artifactId>\n  <version>0.9.3</version>\n</dependency>\n")),(0,o.kt)("h2",{id:"2-java\u6d4b\u8bd5\u4ee3\u7801"},"2 Java\u6d4b\u8bd5\u4ee3\u7801"),(0,o.kt)("p",null,"\u5efa\u7acbJava\u7684\u6d4b\u8bd5\u7c7bUJESClientImplTestJ\uff0c\u5177\u4f53\u63a5\u53e3\u542b\u4e49\u53ef\u4ee5\u89c1\u6ce8\u91ca\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'package com.wedatasphere.linkis.ujes.test;\n\nimport com.webank.wedatasphere.linkis.common.utils.Utils;\nimport com.webank.wedatasphere.linkis.httpclient.dws.authentication.StaticAuthenticationStrategy;\nimport com.webank.wedatasphere.linkis.httpclient.dws.authentication.TokenAuthenticationStrategy;\nimport com.webank.wedatasphere.linkis.httpclient.dws.config.DWSClientConfig;\nimport com.webank.wedatasphere.linkis.httpclient.dws.config.DWSClientConfigBuilder;\nimport com.webank.wedatasphere.linkis.ujes.client.UJESClient;\nimport com.webank.wedatasphere.linkis.ujes.client.UJESClientImpl;\nimport com.webank.wedatasphere.linkis.ujes.client.request.JobExecuteAction;\nimport com.webank.wedatasphere.linkis.ujes.client.request.ResultSetAction;\nimport com.webank.wedatasphere.linkis.ujes.client.response.JobExecuteResult;\nimport com.webank.wedatasphere.linkis.ujes.client.response.JobInfoResult;\nimport com.webank.wedatasphere.linkis.ujes.client.response.JobProgressResult;\nimport org.apache.commons.io.IOUtils;\n\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.concurrent.TimeUnit;\n\npublic class UJESClientTest {\n\n    public static void main(String[] args){\n\n        String user = "hadoop";\n        String executeCode = "show databases;";\n\n        // 1. \u914d\u7f6eDWSClientBuilder\uff0c\u901a\u8fc7DWSClientBuilder\u83b7\u53d6\u4e00\u4e2aDWSClientConfig\n        DWSClientConfig clientConfig = ((DWSClientConfigBuilder) (DWSClientConfigBuilder.newBuilder()\n                .addUJESServerUrl("http://${ip}:${port}")  //\u6307\u5b9aServerUrl\uff0clinkis\u670d\u52a1\u5668\u7aef\u7f51\u5173\u7684\u5730\u5740,\u5982http://{ip}:{port}\n                .connectionTimeout(30000)   //connectionTimeOut \u5ba2\u6237\u7aef\u8fde\u63a5\u8d85\u65f6\u65f6\u95f4\n                .discoveryEnabled(false).discoveryFrequency(1, TimeUnit.MINUTES)  //\u662f\u5426\u542f\u7528\u6ce8\u518c\u53d1\u73b0\uff0c\u5982\u679c\u542f\u7528\uff0c\u4f1a\u81ea\u52a8\u53d1\u73b0\u65b0\u542f\u52a8\u7684Gateway \n                .loadbalancerEnabled(true)  // \u662f\u5426\u542f\u7528\u8d1f\u8f7d\u5747\u8861\uff0c\u5982\u679c\u4e0d\u542f\u7528\u6ce8\u518c\u53d1\u73b0\uff0c\u5219\u8d1f\u8f7d\u5747\u8861\u6ca1\u6709\u610f\u4e49\n                .maxConnectionSize(5)   //\u6307\u5b9a\u6700\u5927\u8fde\u63a5\u6570\uff0c\u5373\u6700\u5927\u5e76\u53d1\u6570\n                .retryEnabled(false).readTimeout(30000)   //\u6267\u884c\u5931\u8d25\uff0c\u662f\u5426\u5141\u8bb8\u91cd\u8bd5\n                .setAuthenticationStrategy(new StaticAuthenticationStrategy())   //AuthenticationStrategy Linkis\u8ba4\u8bc1\u65b9\u5f0f\n                .setAuthTokenKey("${username}").setAuthTokenValue("${password}")))  //\u8ba4\u8bc1key\uff0c\u4e00\u822c\u4e3a\u7528\u6237\u540d;  \u8ba4\u8bc1value\uff0c\u4e00\u822c\u4e3a\u7528\u6237\u540d\u5bf9\u5e94\u7684\u5bc6\u7801\n                .setDWSVersion("v1").build();  //linkis\u540e\u53f0\u534f\u8bae\u7684\u7248\u672c\uff0c\u5f53\u524d\u7248\u672c\u4e3av1\n\n        // 2. \u901a\u8fc7DWSClientConfig\u83b7\u53d6\u4e00\u4e2aUJESClient\n        UJESClient client = new UJESClientImpl(clientConfig);\n\n        try {\n            // 3. \u5f00\u59cb\u6267\u884c\u4ee3\u7801\n            System.out.println("user : " + user + ", code : [" + executeCode + "]");\n            Map<String, Object> startupMap = new HashMap<String, Object>();\n            startupMap.put("wds.linkis.yarnqueue", "default"); // \u5728startupMap\u53ef\u4ee5\u5b58\u653e\u591a\u79cd\u542f\u52a8\u53c2\u6570\uff0c\u53c2\u89c1linkis\u7ba1\u7406\u53f0\u914d\u7f6e\n            JobExecuteResult jobExecuteResult = client.execute(JobExecuteAction.builder()\n                    .setCreator("linkisClient-Test")  //creator\uff0c\u8bf7\u6c42linkis\u7684\u5ba2\u6237\u7aef\u7684\u7cfb\u7edf\u540d\uff0c\u7528\u4e8e\u505a\u7cfb\u7edf\u7ea7\u9694\u79bb\n                    .addExecuteCode(executeCode)   //ExecutionCode \u8bf7\u6c42\u6267\u884c\u7684\u4ee3\u7801\n                    .setEngineType((JobExecuteAction.EngineType) JobExecuteAction.EngineType$.MODULE$.HIVE()) // \u5e0c\u671b\u8bf7\u6c42\u7684linkis\u7684\u6267\u884c\u5f15\u64ce\u7c7b\u578b\uff0c\u5982Spark hive\u7b49\n                    .setUser(user)   //User\uff0c\u8bf7\u6c42\u7528\u6237\uff1b\u7528\u4e8e\u505a\u7528\u6237\u7ea7\u591a\u79df\u6237\u9694\u79bb\n                    .setStartupParams(startupMap)\n                    .build());\n            System.out.println("execId: " + jobExecuteResult.getExecID() + ", taskId: " + jobExecuteResult.taskID());\n\n            // 4. \u83b7\u53d6\u811a\u672c\u7684\u6267\u884c\u72b6\u6001\n            JobInfoResult jobInfoResult = client.getJobInfo(jobExecuteResult);\n            int sleepTimeMills = 1000;\n            while(!jobInfoResult.isCompleted()) {\n                // 5. \u83b7\u53d6\u811a\u672c\u7684\u6267\u884c\u8fdb\u5ea6\n                JobProgressResult progress = client.progress(jobExecuteResult);\n                Utils.sleepQuietly(sleepTimeMills);\n                jobInfoResult = client.getJobInfo(jobExecuteResult);\n            }\n\n            // 6. \u83b7\u53d6\u811a\u672c\u7684Job\u4fe1\u606f\n            JobInfoResult jobInfo = client.getJobInfo(jobExecuteResult);\n            // 7. \u83b7\u53d6\u7ed3\u679c\u96c6\u5217\u8868\uff08\u5982\u679c\u7528\u6237\u4e00\u6b21\u63d0\u4ea4\u591a\u4e2aSQL\uff0c\u4f1a\u4ea7\u751f\u591a\u4e2a\u7ed3\u679c\u96c6\uff09\n            String resultSet = jobInfo.getResultSetList(client)[0];\n            // 8. \u901a\u8fc7\u4e00\u4e2a\u7ed3\u679c\u96c6\u4fe1\u606f\uff0c\u83b7\u53d6\u5177\u4f53\u7684\u7ed3\u679c\u96c6\n            Object fileContents = client.resultSet(ResultSetAction.builder().setPath(resultSet).setUser(jobExecuteResult.getUser()).build()).getFileContent();\n            System.out.println("fileContents: " + fileContents);\n\n        } catch (Exception e) {\n            e.printStackTrace();\n            IOUtils.closeQuietly(client);\n        }\n        IOUtils.closeQuietly(client);\n    }\n}\n')),(0,o.kt)("p",null,"\u8fd0\u884c\u4e0a\u8ff0\u7684\u4ee3\u7801\u5373\u53ef\u4ee5\u548cLinkis\u8fdb\u884c\u4ea4\u4e92"),(0,o.kt)("h2",{id:"3-scala\u6d4b\u8bd5\u4ee3\u7801"},"3 Scala\u6d4b\u8bd5\u4ee3\u7801"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'package com.wedatasphere.linkis.ujes.test\n\nimport java.util.concurrent.TimeUnit\n\nimport com.webank.wedatasphere.linkis.common.utils.Utils\nimport com.webank.wedatasphere.linkis.httpclient.dws.authentication.StaticAuthenticationStrategy\nimport com.webank.wedatasphere.linkis.httpclient.dws.config.DWSClientConfigBuilder\nimport com.webank.wedatasphere.linkis.ujes.client.UJESClient\nimport com.webank.wedatasphere.linkis.ujes.client.request.JobExecuteAction.EngineType\nimport com.webank.wedatasphere.linkis.ujes.client.request.{JobExecuteAction, ResultSetAction}\nimport org.apache.commons.io.IOUtils\n\nobject UJESClientImplTest extends App {\n\n  var executeCode = "show databases;"\n  var user = "hadoop"\n\n  // 1. \u914d\u7f6eDWSClientBuilder\uff0c\u901a\u8fc7DWSClientBuilder\u83b7\u53d6\u4e00\u4e2aDWSClientConfig\n  val clientConfig = DWSClientConfigBuilder.newBuilder()\n    .addUJESServerUrl("http://${ip}:${port}")  //\u6307\u5b9aServerUrl\uff0cLinkis\u670d\u52a1\u5668\u7aef\u7f51\u5173\u7684\u5730\u5740,\u5982http://{ip}:{port}\n    .connectionTimeout(30000)  //connectionTimeOut \u5ba2\u6237\u7aef\u8fde\u63a5\u8d85\u65f6\u65f6\u95f4\n    .discoveryEnabled(false).discoveryFrequency(1, TimeUnit.MINUTES)  //\u662f\u5426\u542f\u7528\u6ce8\u518c\u53d1\u73b0\uff0c\u5982\u679c\u542f\u7528\uff0c\u4f1a\u81ea\u52a8\u53d1\u73b0\u65b0\u542f\u52a8\u7684Gateway\n    .loadbalancerEnabled(true)  // \u662f\u5426\u542f\u7528\u8d1f\u8f7d\u5747\u8861\uff0c\u5982\u679c\u4e0d\u542f\u7528\u6ce8\u518c\u53d1\u73b0\uff0c\u5219\u8d1f\u8f7d\u5747\u8861\u6ca1\u6709\u610f\u4e49\n    .maxConnectionSize(5)   //\u6307\u5b9a\u6700\u5927\u8fde\u63a5\u6570\uff0c\u5373\u6700\u5927\u5e76\u53d1\u6570\n    .retryEnabled(false).readTimeout(30000)   //\u6267\u884c\u5931\u8d25\uff0c\u662f\u5426\u5141\u8bb8\u91cd\u8bd5\n    .setAuthenticationStrategy(new StaticAuthenticationStrategy())  //AuthenticationStrategy Linkis\u8ba4\u8bc1\u65b9\u5f0f\n    .setAuthTokenKey("${username}").setAuthTokenValue("${password}")  //\u8ba4\u8bc1key\uff0c\u4e00\u822c\u4e3a\u7528\u6237\u540d;  \u8ba4\u8bc1value\uff0c\u4e00\u822c\u4e3a\u7528\u6237\u540d\u5bf9\u5e94\u7684\u5bc6\u7801\n    .setDWSVersion("v1").build()  //Linkis\u540e\u53f0\u534f\u8bae\u7684\u7248\u672c\uff0c\u5f53\u524d\u7248\u672c\u4e3av1\n\n  // 2. \u901a\u8fc7DWSClientConfig\u83b7\u53d6\u4e00\u4e2aUJESClient\n  val client = UJESClient(clientConfig)\n  \n  try {\n    // 3. \u5f00\u59cb\u6267\u884c\u4ee3\u7801\n    println("user : " + user + ", code : [" + executeCode + "]")\n    val startupMap = new java.util.HashMap[String, Any]()\n    startupMap.put("wds.linkis.yarnqueue", "default") //\u542f\u52a8\u53c2\u6570\u914d\u7f6e\n    val jobExecuteResult = client.execute(JobExecuteAction.builder()\n      .setCreator("LinkisClient-Test")  //creator\uff0c\u8bf7\u6c42Linkis\u7684\u5ba2\u6237\u7aef\u7684\u7cfb\u7edf\u540d\uff0c\u7528\u4e8e\u505a\u7cfb\u7edf\u7ea7\u9694\u79bb\n      .addExecuteCode(executeCode)   //ExecutionCode \u8bf7\u6c42\u6267\u884c\u7684\u4ee3\u7801\n      .setEngineType(EngineType.SPARK) // \u5e0c\u671b\u8bf7\u6c42\u7684Linkis\u7684\u6267\u884c\u5f15\u64ce\u7c7b\u578b\uff0c\u5982Spark hive\u7b49\n      .setStartupParams(startupMap)\n      .setUser(user).build())  //User\uff0c\u8bf7\u6c42\u7528\u6237\uff1b\u7528\u4e8e\u505a\u7528\u6237\u7ea7\u591a\u79df\u6237\u9694\u79bb\n    println("execId: " + jobExecuteResult.getExecID + ", taskId: " + jobExecuteResult.taskID)\n    \n    // 4. \u83b7\u53d6\u811a\u672c\u7684\u6267\u884c\u72b6\u6001\n    var jobInfoResult = client.getJobInfo(jobExecuteResult)\n    val sleepTimeMills : Int = 1000\n    while (!jobInfoResult.isCompleted) {\n      // 5. \u83b7\u53d6\u811a\u672c\u7684\u6267\u884c\u8fdb\u5ea6   \n      val progress = client.progress(jobExecuteResult)\n      val progressInfo = if (progress.getProgressInfo != null) progress.getProgressInfo.toList else List.empty\n      println("progress: " + progress.getProgress + ", progressInfo: " + progressInfo)\n      Utils.sleepQuietly(sleepTimeMills)\n      jobInfoResult = client.getJobInfo(jobExecuteResult)\n    }\n    if (!jobInfoResult.isSucceed) {\n      println("Failed to execute job: " + jobInfoResult.getMessage)\n      throw new Exception(jobInfoResult.getMessage)\n    }\n\n    // 6. \u83b7\u53d6\u811a\u672c\u7684Job\u4fe1\u606f\n    val jobInfo = client.getJobInfo(jobExecuteResult)\n    // 7. \u83b7\u53d6\u7ed3\u679c\u96c6\u5217\u8868\uff08\u5982\u679c\u7528\u6237\u4e00\u6b21\u63d0\u4ea4\u591a\u4e2aSQL\uff0c\u4f1a\u4ea7\u751f\u591a\u4e2a\u7ed3\u679c\u96c6\uff09\n    val resultSetList = jobInfoResult.getResultSetList(client)\n    println("All result set list:")\n    resultSetList.foreach(println)\n    val oneResultSet = jobInfo.getResultSetList(client).head\n    // 8. \u901a\u8fc7\u4e00\u4e2a\u7ed3\u679c\u96c6\u4fe1\u606f\uff0c\u83b7\u53d6\u5177\u4f53\u7684\u7ed3\u679c\u96c6\n    val fileContents = client.resultSet(ResultSetAction.builder().setPath(oneResultSet).setUser(jobExecuteResult.getUser).build()).getFileContent\n    println("First fileContents: ")\n    println(fileContents)\n  } catch {\n    case e: Exception => {\n      e.printStackTrace()\n    }\n  }\n  IOUtils.closeQuietly(client)\n}\n')))}d.isMDXComponent=!0}}]);